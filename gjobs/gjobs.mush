@@ Title: Garage Jobs
@@ Author: Sketch @ M*U*S*H
@@
@@ Description: An easy-to-hack +jobs system
@@
@@ Features:
@@ - Group-based permissions
@@ - Groups are just attributes, so adding is easy
@@ - Coded for easy hacking and reading
@@ - Small codebase, minimalistic interface
@@ - A few automated tests (better than nothing)

@@ Usage reference:
@@  There is no interface for managing groups.
@@
@@  <JobRef> may be: Title or Group/Title
@@  Default command is +read
@@  Permissions needed:
@@  ,----- Create job
@@  |,---- See group
@@  ||,--- Modify job
@@ [-S-] Read job details:      /read <JobRef>
@@ [---] List groups:           /list
@@ [---] List matching groups:  /list <group>
@@ [---] List matching jobs:    /list <JobRef>
@@ [CS-] Add job to group:      /add <group>=<caption>/<body>
@@ [CS-] Add job to group:      /add <group>/<caption>=<body>
@@ [-SM] Begin working:         /take <JobRef>
@@ [-SM] Decline job:           /reject <JobRef>
@@ [-SM] Mark job as complete:  /complete <JobRef>

@@ Hacking:
@@
@@ Jobs and Groups are coded as their own layer, to allow changing to SQL.
@@ Whenever making database calls, always u(db,retrieve_job,%#,Job name)
@@ &db_ functions are called by &db, and define the database API.
@@ &db__ functions are private, only called by functions in &db_
@@ &db_* are functions that query the database
@@ &db_set_* are @includes that modify the database

@@ Captions cannot contain newlines nor |
@@ Groups data cannot contain newlines
@@ Group name cannot contain newlines, nor |, nor /

@@ Todo: Disallow duplicate-named jobs during /add
@@ Todo: Add /take, /reject, and /complete
@@ Todo: Change commands to (.+) instead and enforce valid job names and group names with nice error message
@@ Todo: Improve the syntax error messages on /add
@@ Todo: Warn when %# used in group attribute. (with &disable_warning_group Jobs=1)
@@ Todo?: Works on small screens
@@ Todo: /archive <JobRef> to move to &archive` tree
@@ Todo: Make data and command objects separable
@@ Todo: Report errors if command doesn't match (use scan())
@@ Todo: Simplifiy data backend by just spitting out jobs`<id>_* for detail view

@@ @@@@@@@@
@@ Section:  Non-database code
@@ @@@@@@@@

@create Jobs
@set Jobs=!NO_COMMAND

@@ can_nspemit removes NoSpoof info, but isn't necessary.
@power Jobs=can_nspemit

&jobs Jobs=@@ Format: &jobs`<id>_<caption|data|body> ; @@ &jobs`<id>_data =group_id|poster|ctime|owner|...
&groups Jobs=@@ Format: &groups_<id>=Name|add_jobs_lock|see_jobs_lock|modify_jobs_lock|Description

@@ Message: %0=target, %1=name of message, %2--%9 additional arguments
&message Jobs=@nspemit %0=[u(me/message_[default(%0/lang,en)]_prefix)][udefault(me/message_[default(%0/lang,en)]_%1,Message missing. Please contact a translator.,%0,%2,%3,%4,%5,%6,%7,%8,%9)]

&message_en_prefix Jobs=JOBS:%b
&message_en_no_matching_group_name Jobs=There is no group named "%1".
&message_en_ambiguous_group_name Jobs=Please type more of "%1" to clarify which group you meant: %2
&message_en_job_added Jobs=Added job "%2" to group "%1".
&message_en_cannot_create Jobs=You may not add jobs to group "%1"
&message_en_cannot_modify Jobs=You may not modify jobs in group "%1".

&display_group_list Jobs=[ljust(Group Name,20)]Description%r[ljust(-,20,-)][ljust(-,20,-)]%r[iter(rest(%0,%r),ljust(elements(%i0,2,|),20)[elements(%i0,6,|)],%r,%r)]%r

&display_multijob_list Jobs=Group Name/Job Name%r[repeat(-,20)]%r[u(display_multijob_list_[first(%0,%r)],%0)]
&display_multijob_list_list Jobs=iter(rest(%0,%r),elements(%i0,2,|)/[elements(%i0,6,|)],%r,%r)
&display_multijob_list_details Jobs=first(rest(%0,%r),%r)/[elements(rest(%0,%r),2,%r)]

&display_details Jobs=---Job---%rGroup/Title: [elements(%0,2 3,%r,/)]%rPosted by: [name(elements(elements(%0,4,%r),2,|))]%rPosted at: [convsecs(elements(elements(%0,4,%r),3,|))]%rDescription: [extract(%0,5,999,%r)]%r---End---


&cmd_list0 Jobs=$^\+jobs?/list$:@nspemit %#=u(display_group_list,u(db,retrieve_group,%#,@@(nothing)))
&cmd_list1 Jobs=$^\+jobs?/list ([^/]+)$: @include me/interrupt_if_no_group=%#,%1; @include me/do_display_groups=%#,%1
&cmd_list2 Jobs=$^\+jobs?/list ([^/]*)/(.+)$: @include me/interrupt_if_no_group=%#,%1; @include me/do_display_multijob=%#,%1/%2

&cmd_read2 Jobs=$^\+jobs/read ([^/]+)(?\:/(.+))?$: @include me/interrupt_if_not_single_group=%#,%1; @include me/interrupt_to_read_if_single=%#,%1/%2; @include me/do_display_multijob=%#,%1/%2

&cmd_add3 Jobs=$^\+jobs?/(?\:add|new) ([^=/]+)[/=]([^=/]+)[/=](.+)$: @include me/interrupt_if_not_single_group=%#,%1; @include me/interrupt_if_cannot_create=%#,%1; @include me/do_add=%#,%1,%2,%3

&cmd_default0 Jobs=$^\+jobs?$: @include me/cmd_list0

&cmd_take2 Jobs=$^\+jobs/take ([^/]+)/(.+)$: @include me/interrupt_if_not_single_group=%#,%1; @include me/interrupt_if_cannot_modify=%#,%1; @include me/do_take=%#,%1/%2
&cmd_reject2 Jobs=$^\+jobs/reject ([^/]+)/(.+)$: @include me/interrupt_if_not_single_group=%#,%1; @include me/interrupt_if_cannot_modify=%#,%1; @include me/do_reject=%#,%1/%2
&cmd_complete2 Jobs=$^\+jobs/complete ([^/]+)/(.+)$: @include me/interrupt_if_not_single_group=%#,%1; @include me/interrupt_if_cannot_modify=%#,%1; @include me/do_complete=%#,%1/%2

@set jobs/cmd_*=regexp

&do_add Jobs=@include me/db_affect_add=%0,first(rest(u(db,retrieve_group,%0,%1),%r),|),%2,%3; @include me/message=%0,job_added,elements(u(db,retrieve_group,%0,%1),2,|),%2,%q<newjobid>
&do_display_details Jobs=@nspemit %0=u(display_details,u(db,retrieve_job,%0,%1))
&do_display_groups Jobs=@nspemit %#=u(display_group_list,u(db,retrieve_group,%0,%1))
&do_display_multijob Jobs=@nspemit %0=u(display_multijob_list,u(db,retrieve_job,%0,%1))

&interrupt_to_read_if_single Jobs=@break strmatch(u(db,retrieve_job,%0,%1),Details*)={@include me/do_display_details=%0,%1}
&interrupt_if_not_single_group Jobs=@include me/interrupt_if_no_group=%0,%1; @include me/interrupt_if_ambiguous_group=%0,%1
&interrupt_if_no_group Jobs=@break strmatch(u(db,retrieve_group,%0,%1),None)={@include me/message=%0,no_matching_group_name,%1}
&interrupt_if_ambiguous_group Jobs=@break strmatch(u(db,retrieve_group,%0,%1),List%r*)={@include me/message=%0,ambiguous_group_name,%1}
&interrupt_if_cannot_create Jobs=@assert elements(u(db,retrieve_group,%0,%1),4,|)={@include me/message=%0,cannot_create,elements(u(db,retrieve_group,%0,%1),2,|)}
&interrupt_if_cannot_modify Jobs=@assert elements(u(db,retrieve_group,%0,%1),6,|)={@include me/message=%0,cannot_modify,elements(u(db,retrieve_group,%0,%1),2,|)}

@@ @@@@@@@@
@@ Section: Database API
@@ @@@@@@@@

@@ Hook method for all DB calls. Will be used here to memoize.
&db Jobs=u(me/db_%0,%1,%2,%3)

&db__new_job_id Jobs=baseconv(inc(div(nattr(me/jobs`*),3)),10,36)

@@ Make a new job in the DB. %0-Poster, %1-GroupID, %2-Caption, %3-Body
&db_affect_add Jobs=think New Job ID: [setr(newjobid,u(db__new_job_id))]; &jobs`%q<newjobid>_data me=%1|[objid(%0)]|[secs()]|; &jobs`%q<newjobid>_caption me=%2; &jobs`%q<newjobid>_body me=%3 


@@ As %0, get all visible job data matching jobref %1
@@ Returns:
@@  1. 'None' if no group or no jobs found
@@  2. either 'List' or 'Details' followed by %r and:
@@   2a. if 'List', a list of matching job data
@@       list format is: DATA(groupname as 2nd element)|CAPTION
@@   2b. if 'Details' the details for that single job ref.
@@       detail format is: GROUPNAME%rCAPTION%rDATA%rBODY
&db_retrieve_job Jobs=u(db__retrieve_job_step_2,%0,switch(%1,*/*,after(%1,/),%1),rest(u(db_retrieve_group,%0,switch(%1,*/*,before(%1,/),,)),%r))

@@ As %0, list all jobs matching %1 of visible group-data %2
&db__retrieve_job_step_2 Jobs=switch(%2,,None, u(db__retrieve_job_step_3, %0, u(db__filter_by_job_caption,u(db__get_job_caption_attrs_from_group_datas,%2),%1))) 

&db__get_job_caption_attrs_from_group_datas Jobs=edit(regrep(me,jobs`*_DATA,u(db__jobs_regexp,%0)),_DATA,_CAPTION,%b,%r)
&db__jobs_regexp Jobs=^\([edit(map(db__first_element_mapper,%0,%r),%r,|)]\)\\|

@@ %0 - job`<id>_CAPTION %r-list. %1-JobName
&db__filter_by_job_caption Jobs=elements(%0,u(db__exact_first_or_matching_inner,iter(%0,first(v(##),|),%r,%r),%1),%r,%r)

&db__retrieve_job_step_3 Jobs=switch(words(%1,%r),>1,List%r[u(db__mix_job_data,%0,%1)],0,None,1,Details%r[u(db__detail_data,%0,%1)]
&db__mix_job_data Jobs=mix(db__mix_job_data_mixer,regeditall(%1,.+,%0),edit(%1,_CAPTION,_DATA),%1,%r)
&db__mix_job_data_mixer Jobs=[insert(v(%1),2,u(db__get_groupname_for_jobattr,%0,%1),|)]|[v(%2)]
&db__detail_data Jobs=[u(db__get_groupname_for_jobattr,%0,%1)]%r[v(%1)]%r[v(edit(%1,_CAPTION,_DATA))]

&db__get_groupname_for_jobattr Jobs=first(u(memoize,db__u_group,%0,first(v(regedit(%1,_\[^_\]+$,_DATA)),|)),|)

@@ As %0, get all visible group data for group names matching %1
@@ Returns 'None' for zero-length list, or
@@ 'Details' followed by %r followed by data for the only matching group, or
@@ 'List' followed by %r followed by a list of data for all matching groups
@@  Data is in format: ID|GroupName|Name|Create|See|Modify|Description
&db_retrieve_group Jobs=u(db__retrieve_group_step_2,u(db__exact_first_or_matching,u(db__get_group_data_for_ids,%0,u(db__visible_group_ids_for,%0)),%1))

&db__retrieve_group_step_2 Jobs=switch(words(%0,%r),>1,List%r%0,1,Details%r%0,None)

&db__visible_group_ids_for Jobs=letq(inputname,%0,filter(db__visible_group_ids_for_filter,edit(lattr(me/groups_*),%b,%r,GROUPS_,),%r,%r))
&db__visible_group_ids_for_filter Jobs=elements(u(memoize,db__u_group,%q<inputname>,%0),3,|)
&db__get_group_data_for_ids Jobs=iter(%1,##|[u(memoize,db__u_group,%0,##)],%r,%r)


@@ Minor stuff
&db__exact_first_or_matching Jobs=elements(%0,u(db__exact_first_or_matching_inner,map(db__second_element_mapper,%0,%r),%1),%r,%r)
&db__first_element_mapper Jobs=first(%0,|)
&db__second_element_mapper Jobs=elements(%0,2,|)
&db__exact_first_or_matching_inner Jobs=firstof(matchall(%0,%1,%r,%b),matchall(%0,*%1*,%r,%b))

&db__u_group Jobs=u(groups_%1,%0)

&db_set_job_taken Jobs=
&db_set_job_rejected Jobs=
&db_set_job_completed Jobs=
&db_create_job Jobs=


@@ Memoize calls to %0 with arguments %1-%9
&memoize Jobs=u(%0,%1,%2,%3,%4,%5,%6,%7,%8,%9)

@@ TESTING
@@ Assumption: You are a wizard
@@ Reminder Groups Add/See/Mod
@@ &jobs Jobs=@@ Format: &jobs`<id>_<caption|data|body> ; @@ &jobs`<id>_data =group_id|owner|ctime|...
&groups_Cool_Kids_Club Jobs=Cool Kids Club|0|0|0|Nobody is cool enough.
&groups_Building_Board Jobs=Building Board|1|1|[strmatch(#-1,%0)]|Build requests go here.
&groups_Admin Jobs=Admin Board|[orflags(%0,Wr)]|[orflags(%0,Wr)]|[orflags(%0,Wr)]|Admin only.
&jobs`2_caption Jobs=Wait What
&jobs`2_data Jobs=COOL_KIDS_CLUB|#555:123|Fake Date Data
&jobs`2_body Jobs=How'd this even get here, dude?
&jobs`q1_caption Jobs=A Golden Castle
&jobs`q1_data Jobs=BUILDING_BOARD|#24:123|Fake Date Data
&jobs`q1_body Jobs=Please build Sneaker a golden castle off of Main and Oak street. Thank you!
&jobs`t4_caption Jobs=Yveltal Road
&jobs`t4_data Jobs=BUILDING_BOARD|#5:123|Fake Date Data
&jobs`t4_body Jobs=Hey, could somebody finish building Yveltal Road off the Ashen Valley?
&jobs`aa_caption Jobs=ROFL proposal
&jobs`aa_data Jobs=ADMIN|#5:123|Fake Date Data
&jobs`aa_body Jobs=Wow guyz check out this awesome link: https://example.com
&jobs`kk_caption Jobs=Theme change proposal
&jobs`kk_data Jobs=ADMIN|#5:123|Fake Date Data
&jobs`kk_body Jobs=I think removing Spirit-type would be a good idea. Ghost alone is enough. What do you think? --A


&kilt Jobs=$KILT *:@@ Stub
KILT START
@@ Groups API
KILT None=u(jobs/db_retrieve_group,%#,Spacejam)
KILT List%rADMIN|Admin Board|1|1|1|Admin Only.%rBUILDING_BOARD|Building Board|1|1|0|Build requests go here.=u(jobs/db_retrieve_group,%#,Board)
KILT List%rADMIN|Admin Board|1|1|1|Admin Only.%rBUILDING_BOARD|Building Board|1|1|0|Build requests go here.=u(jobs/db_retrieve_group,%#,)
@@ Jobs API
KILT JOBS`2_CAPTION%rJOBS`AA_CAPTION%rJOBS`KK_CAPTION=u(jobs/db__get_job_caption_attrs_from_group_datas,ADMIN%RCOOL_KIDS_CLUB)
KILT None=u(jobs/db_retrieve_job,%#,BogusText)
KILT List%rADMIN|Admin Board|#5:123|Fake Date Data|ROFL proposal%rADMIN|Admin Board|#5:123|Fake Date Data|Theme change proposal=u(jobs/db_retrieve_job,%#,admin/Proposal)
KILT JOBS`AA_CAPTION=u(jobs/db__filter_by_job_caption,JOBS`AA_CAPTION%rJOBS`KK_CAPTION,ROFL)

KILT Details%rAdmin Board%rTheme change proposal%rADMIN|#5:123|Fake Date Data=u(jobs/db_retrieve_job,%#,admin/Theme)

KILT CHECK

@@ Integration tests
+jobs/add Admin/Fruit1=Strawberry.
+jobs/add Admin/Fruit2=Starfruit.
+jobs/add Admin/Spacetime=Change spacetime to be non-linear.

@wipe Jobs/groups_*
@wipe Jobs/jobs`*
@wipe Jobs/kilt

