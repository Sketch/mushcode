&BACKTRACK_NODES Pathfinder=ifelse(isdbref(first(%1)),u(backtrack_nodes,%0,cat(u(backtrack_source,%0,first(%1),%2),%1),dec(%2)),%1)

&BACKTRACK_SOURCE Pathfinder=elements(grab(%0,%1:*:%2),2,:)

@DESCRIBE Pathfinder=Uses a breadth-first search to find the shortest path from a list of 'Point A's to a 'Point B'. Works in any group of standard rooms with standard exits (no master/zone/dynamic exits).

@set Pathfinder/DESCRIBE=no_command visual prefixmatch public nearby

&DO Pathfinder=u(pathfind_init,%0,%1) [@@(Call this with %0=LIST, %1=TARGET)]

&EXPAND Pathfinder=cat(%0,u(remove_invalid,u(expand_list,%0,%1,inc(%2)),u(extract_destinations,%0)))

&EXPAND_LIST Pathfinder=iter(u(extract_destinations,graball(%0,*:*:[dec(%2)])),u(list_adjacent_rooms,%i0,:%i0:%2))

&EXTRACT_DESTINATIONS Pathfinder=regeditall(%0,v(tuple),$1)

&EXTRACT_SOURCES Pathfinder=regeditall(%0,v(tuple),$2)

&FOUND_TARGET Pathfinder=t(match(%0,%1:*:*))

&GET_EXIT_FROM0TO1 Pathfinder=filter(#lambda/strmatch(loc(\%0),%1),lexits(%0))

&GET_FINAL_DBREF Pathfinder=first(u(get_final_node,%0,%1,%2),:)

&GET_FINAL_NODE Pathfinder=regrab(%0,\(?:[edit(%1,%b,|)]\):\[^:\]+:%2\\b)

&LIST_ADJACENT_ROOMS Pathfinder=map(#lambda/loc(\%0)[if(%1,%1)],iter(%0,lexits(%i0)))

&OLD_REMOVE_INVALID Pathfinder=filter(#lambda/not(match(%1,before(\%0,:))),munge(#lambda/setunion(\%0,),u(extract_destinations,%0),%0))

&PATHFIND Pathfinder=switch(u(span,%0,%1,0),#-1*,#$,u(reduce_path,rest(#$),%1,first(#$)))

&PATHFIND_INIT Pathfinder=u(pathfind,iter(%0,%i0:0),%1,0)

&REDUCE_PATH Pathfinder=u(backtrack_nodes,%0,u(get_final_dbref,%0,%1,%2),%2)

&REMOVE_INVALID Pathfinder=munge(#lambda/setdiff(\%0,%1),u(extract_destinations,%0),%0)

&SPAN Pathfinder=ifelse(u(found_target,%0,%1),%2 %0,u(span,u(expand,%0,%1,%2),%1,inc(%2)))

&TEST1 Pathfinder=u(expand,#0:START:0 #159:START:0)

&TEST2 Pathfinder=u(pathfind,#0:START:0,#10477)

&TUPLE Pathfinder=(#[-\d]+):([^:]+):\d+

&VERSION Pathfinder=1.1
